{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAwBA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YACE,IACEH,EACIF,EAAQ,C,SAAEH,E,MAAUC,IACpBG,EAAO,C,SAAEJ,E,MAAUC,KACzBA,EACD,G,CA/BQQ,SAASC,cAAc,SAE/BC,iBAAiB,UAAUC,IAC9BA,EAAMC,iBAEN,MAAQZ,MAAAa,EAAKC,KAAEA,EAAIC,OAAEA,GAAWJ,EAAMK,OAAOC,SAE7C,IAAK,IAAIC,EAAI,EAAGA,EAAIH,EAAOI,MAAOD,IAAK,CAGrCpB,EAAcoB,EAFOE,OAAOP,EAAMM,OAASC,OAAON,EAAKK,OAASD,GAG7DG,MAAK,EAACtB,SAAEA,EAAQC,MAAEA,KACjBsB,EAAA1B,GAAS2B,OAAOC,QACd,uBAAqBzB,QAAiBC,SACrCyB,OAEJ,EAAO1B,WAAUC,WAChBsB,EAAA1B,GAAQ2B,OAACG,QAAO,sBAAS3B,QAA8BC,Q","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst form = document.querySelector('.form');\n\nform.addEventListener('submit', event => {\n  event.preventDefault();\n\n  const { delay, step, amount } = event.target.elements;\n\n  for (let i = 0; i < amount.value; i++) {\n    const currentDelay = Number(delay.value) + Number(step.value) * i;\n\n    createPromise(i, currentDelay)\n      .then(({ position, delay }) =>\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        )\n      )\n      .catch(({ position, delay }) =>\n        Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`)\n      );\n  }\n});\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(\n      () =>\n        shouldResolve\n          ? resolve({ position, delay })\n          : reject({ position, delay }),\n      delay\n    );\n  });\n};\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","document","querySelector","addEventListener","event","preventDefault","delay1","step","amount","target","elements","i","value","Number","then","$parcel$interopDefault","Notify","success","catch","failure"],"version":3,"file":"03-promises.2f47f624.js.map"}